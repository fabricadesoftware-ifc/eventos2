image: nikolaik/python-nodejs:python3.7-nodejs12

services:
  - postgres:12

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_VIRTUALENVS_PATH: "$CI_PROJECT_DIR/.cache/venvs"
  POSTGRES_DB: eventos2
  POSTGRES_USER: eventos2
  POSTGRES_PASSWORD: unsafe-password-for-testing
  DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB
  SECRET_KEY: unsafe-key-for-testing
  TEST_HOST: eventos2@eventos2.fabricadesoftware.ifc.edu.br
  TEST_ROOT_DIR: /srv/eventos2


stages:
  - testing
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip/
    - .cache/venvs/

default:
  before_script:
    - pip install poetry==1.0.5
    - poetry install

lint:
  stage: testing
  script:
    - poetry run black --check eventos2 tests
    - poetry run isort -rc eventos2 tests
    - poetry run flake8 eventos2 tests
    - poetry run bandit --quiet --recursive eventos2
    - cd frontend
    - npm install
    - npm run lint
    - cd ..

test:
  stage: testing
  coverage: '/TOTAL.*\s+(\d+%)$/'
  script:
    - poetry run pytest --cov=eventos2

deploy_test:
  stage: deploy
  only:
    - master
  script:
    - poetry export -f requirements.txt > requirements.txt
    - |
      cat << EOF >.env
      SECRET_KEY=$TEST_SECRET_KEY
      DATABASE_URL=postgres://eventos2@/eventos2
      SENTRY_URL=$TEST_SENTRY_URL
      ALLOWED_HOSTS=.eventos2.fabricadesoftware.ifc.edu.br,127.0.0.1
      EVENTOS2_FRONTEND_BASE_URL=http://127.0.0.1:8091
      EVENTOS2_FRONTEND_BROWSER_BASE_URL=/
      DEBUG=True
      EOF
    - poetry run python manage.py collectstatic
    # Allow web server (nginx) to traverse directories and read files,
    # so that it can serve the static files.
    - chmod -R u=rwX,go=rX static/
    - cd frontend
    - npm install
    - npm run build
    - cd ..
    - rm -rf .cache
    - apt-get update -y
    - apt-get install -yqq openssh-client rsync
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "[eventos2.fabricadesoftware.ifc.edu.br]:1022 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAQHt8NDADsuuX0yyLocmnA+L4MLEyrQZvSV7M0KRz9m" >> ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$TEST_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - export TEST_DEPLOY_DIR="$TEST_ROOT_DIR/$(date +%Y%m%d%H%M%S)"
    - ssh -p 1022 $TEST_HOST "mkdir -p \"$TEST_DEPLOY_DIR/frontend\""
    - rsync -rtz -e 'ssh -p 1022' .env requirements.txt manage.py eventos2 "$TEST_HOST:$TEST_DEPLOY_DIR"
    - rsync -rtz -e 'ssh -p 1022' frontend/.nuxt frontend/nuxt.config.js frontend/package.json frontend/package-lock.json "$TEST_HOST:$TEST_DEPLOY_DIR/frontend"
    - ssh -p 1022 $TEST_HOST "cd \"$TEST_DEPLOY_DIR/\" && virtualenv -p python3 venv && ./venv/bin/pip install -r requirements.txt"
    - ssh -p 1022 $TEST_HOST "cd \"$TEST_DEPLOY_DIR/\" && PYTHONPATH='.' ./venv/bin/python manage.py migrate"
    - ssh -p 1022 $TEST_HOST "cd \"$TEST_DEPLOY_DIR/frontend\" && npm install --only=production"
    - ssh -p 1022 $TEST_HOST "ln -s $TEST_ROOT_DIR/media \"$TEST_DEPLOY_DIR/media\""
    - ssh -p 1022 $TEST_HOST "ln -snf \"$TEST_DEPLOY_DIR\" $TEST_ROOT_DIR/current"
    - ssh -p 1022 $TEST_HOST "sudo systemctl restart projeto-eventos2-eventos2-gunicorn.service"
    - ssh -p 1022 $TEST_HOST "sudo systemctl restart projeto-eventos2-eventos2-nuxt.service"
  artifacts:
    when: always
    name: ${CI_COMMIT_REF_SLUG}
    expire_in: 1 week
    paths:
      - requirements.txt
  environment:
    name: test
    url: https://eventos2.fabricadesoftware.ifc.edu.br
