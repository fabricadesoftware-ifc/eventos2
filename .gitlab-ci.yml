image: nikolaik/python-nodejs:python3.7-nodejs12

services:
  - postgres:12

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POSTGRES_DB: test_eventos2
  POSTGRES_USER: eventos2
  POSTGRES_PASSWORD: unsafe-password-for-testing

stages:
  - lint
  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip/
    - .cache/venvs/

default:
  before_script:
    - pip install poetry==1.0.0
    - mkdir -p ~/.config/pypoetry
    - touch ~/.config/pypoetry/config.toml
    - poetry config virtualenvs.path $CI_PROJECT_DIR/.cache/venvs
    - poetry install

lint:
  stage: lint
  script:
    - poetry run black --check .
    - poetry run isort --check-only
    - poetry run flake8 .
    - poetry run bandit --quiet --exclude=./tests/ --recursive .

test:
  stage: test
  coverage: '/TOTAL.*\s+(\d+%)$/'
  script:
    - DATABASE_URL=postgres://eventos2:unsafe-password-for-testing@postgres/eventos2
      SECRET_KEY=unsafe-key-for-testing
      poetry run pytest --cov=eventos2

deploy_test:
  stage: deploy
  only:
    - master
    - test
  script:
    - poetry export -f requirements.txt > requirements.txt
    - |
      cat << EOF >.env
      SECRET_KEY=$TEST_SECRET_KEY
      DATABASE_URL=postgres://eventos2@/eventos2
      SENTRY_URL=$TEST_SENTRY_URL
      ALLOWED_HOSTS=eventos2.fabricadesoftware.ifc.edu.br
      DEBUG=True
      EOF
    - poetry run python eventos2/manage.py collectstatic
    # Allow web server (nginx) to traverse directories and read files,
    # so that it can serve the static files.
    - chmod -R u=rwX,go=rX static/
    - rm -rf .cache
    - apt-get update -y
    - apt-get install -yqq openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "[eventos2.fabricadesoftware.ifc.edu.br]:1022 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAQHt8NDADsuuX0yyLocmnA+L4MLEyrQZvSV7M0KRz9m" >> ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$TEST_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - export TEST_DEPLOY=$(date +%Y%m%d%H%M%S)
    - ssh -p 1022 eventos2@eventos2.fabricadesoftware.ifc.edu.br "mkdir \"/srv/eventos2/$TEST_DEPLOY/\""
    - scp -r -p -P 1022 . "eventos2@eventos2.fabricadesoftware.ifc.edu.br:/srv/eventos2/$TEST_DEPLOY"
    - ssh -p 1022 eventos2@eventos2.fabricadesoftware.ifc.edu.br "cd \"/srv/eventos2/$TEST_DEPLOY/\" && virtualenv -p python3 venv && ./venv/bin/pip install -r requirements.txt"
    - ssh -p 1022 eventos2@eventos2.fabricadesoftware.ifc.edu.br "cd \"/srv/eventos2/$TEST_DEPLOY/\" && PYTHONPATH='.' ../venv/bin/python eventos2/manage.py migrate"
    - ssh -p 1022 eventos2@eventos2.fabricadesoftware.ifc.edu.br "ln -s /srv/eventos2/media \"/srv/eventos2/$TEST_DEPLOY/media\""
    - ssh -p 1022 eventos2@eventos2.fabricadesoftware.ifc.edu.br "ln -snf \"/srv/eventos2/$TEST_DEPLOY\" /srv/eventos2/current"
    - ssh -p 1022 eventos2@eventos2.fabricadesoftware.ifc.edu.br "sudo systemctl restart projeto-eventos2-eventos2.service"
  artifacts:
    when: always
    name: ${CI_COMMIT_REF_SLUG}
    expire_in: 1 week
    paths:
      - requirements.txt
  environment:
    name: test
    url: https://eventos2.fabricadesoftware.ifc.edu.br
