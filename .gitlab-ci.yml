image: debian:buster-slim

# services:
#   - postgres:12

variables:
  # PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  # POETRY_VIRTUALENVS_PATH: "$CI_PROJECT_DIR/.cache/venvs"
  # POSTGRES_DB: eventos2
  # POSTGRES_USER: eventos2
  # POSTGRES_PASSWORD: unsafe-password-for-testing
  # DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB
  # SECRET_KEY: unsafe-key-for-testing
  TEST_SSH_HOST_KEY: "[app1.fabricadesoftware.ifc.edu.br]:1022 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE1u+sxf1LVqV/i4RRQ8NT1L+6XOH40qZJYYZcMZlkFn"
  # TEST_ROOT_DIR: /srv/eventos2
  CI_REGISTRY_IMAGE_BACKEND: $CI_REGISTRY_IMAGE/backend
  CI_REGISTRY_IMAGE_BACKEND_CACHE: $CI_REGISTRY_IMAGE/backend/cache
  CI_REGISTRY_IMAGE_FRONTEND: $CI_REGISTRY_IMAGE/frontend
  CI_REGISTRY_IMAGE_FRONTEND_CACHE: $CI_REGISTRY_IMAGE/frontend/cache


stages:
  # - testing
  - build
  - deploy

# cache:
#   key: ${CI_COMMIT_REF_SLUG}
#   paths:
#     - .cache/pip/
#     - .cache/venvs/

# default:
#   before_script:
#     - pip install poetry==1.0.5
#     - poetry install

# lint:
#   stage: testing
#   script:
#     - poetry run black --check eventos2 tests
#     - poetry run isort -rc eventos2 tests
#     - poetry run flake8 eventos2 tests
#     - poetry run bandit --quiet --recursive eventos2
#     - cd frontend
#     - npm install
#     - npm run lint
#     - cd ..

# test:
#   stage: testing
#   coverage: '/TOTAL.*\s+(\d+%)$/'
#   script:
#     - poetry run pytest --cov=eventos2

build_backend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/Dockerfile.backend --destination $CI_REGISTRY_IMAGE_BACKEND:$CI_COMMIT_SHORT_SHA --destination $CI_REGISTRY_IMAGE_BACKEND:latest --cache=true --cache-repo=$CI_REGISTRY_IMAGE_BACKEND_CACHE
  only:
    - docker

build_frontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/Dockerfile.frontend --destination $CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_SHORT_SHA --destination $CI_REGISTRY_IMAGE_FRONTEND:latest --cache=true --cache-repo=$CI_REGISTRY_IMAGE_FRONTEND_CACHE
  only:
    - docker

deploy_backend:
  stage: deploy
  image: yurihs/gitlab-ci-ssh:1
  script:
    - . setup-ssh --local-name app1 --host app1.fabricadesoftware.ifc.edu.br --port 1022 --user dokku --private-key "$TEST_SSH_PRIVATE_KEY" --host-key "$TEST_SSH_HOST_KEY"
    - ssh app1 deploy-from-registry eventos2-backend $CI_COMMIT_SHORT_SHA
  only:
    - docker

deploy_frontend:
  stage: deploy
  image: yurihs/gitlab-ci-ssh:1
  script:
    - . setup-ssh --local-name app1 --host app1.fabricadesoftware.ifc.edu.br --port 1022 --user dokku --private-key "$TEST_SSH_PRIVATE_KEY" --host-key "$TEST_SSH_HOST_KEY"
    - ssh app1 deploy-from-registry eventos2-frontend $CI_COMMIT_SHORT_SHA
  only:
    - docker
